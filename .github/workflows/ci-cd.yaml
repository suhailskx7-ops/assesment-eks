name: CI/CD Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      # 🧩 Step 1: Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 🧩 Step 2: Configure AWS credentials using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 🧩 Step 3: Install kubectl (latest stable version)
      - name: Install kubectl (official stable)
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      # 🧩 Step 4: Update kubeconfig for your EKS cluster
      - name: Update kubeconfig
        run: |
          mkdir -p ~/.kube
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }} --kubeconfig ~/.kube/config
          echo "✅ kubeconfig updated successfully"
          cat ~/.kube/config

      # 🧩 Step 5: Debug check – ensure AWS credentials and cluster access are valid
      - name: Debug AWS and EKS Connection
        run: |
          echo "🔍 Checking AWS identity..."
          aws sts get-caller-identity
          echo "🔍 Listing EKS clusters..."
          aws eks list-clusters --region ${{ secrets.AWS_REGION }}
          echo "🔍 Checking Kubernetes cluster info..."
          kubectl cluster-info

      # 🧩 Step 6: Verify cluster nodes
      - name: Verify cluster nodes
        run: kubectl get nodes

      # 🧩 Step 7: Deploy Kubernetes manifests
      - name: Deploy Kubernetes manifests
        run: kubectl apply -f k8s/
